name: Deploy Aging Residence

on:
  push:
    branches:
      - prod
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js 18.x
        uses: actions/setup-node@v1
        with:
          node-version: 18.x

      - name: Install dependencies
        run: |
          cd ./my-app
          npm install

      - name: Build
        run: |
          cd ./my-app
          npm run build

      - name: Verify Environment Variables
        run: |
          echo "HOST: ${AGR_HOST:0:4}****"
          echo "USER: ${AGR_USER:0:4}****"
          echo "REMOTE_DIR: /var/www/html"
        env:
          HOST: ${{ secrets.AGR_HOST }}
          USER: ${{ secrets.AGR_USER }}

      - name: Create backup directory and backup existing remote directory
        env:
          HOST: ${{ secrets.AGR_HOST }}
          USER: ${{ secrets.AGR_USER }}
          SSH_KEY: ${{ secrets.AGR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $HOST >> ~/.ssh/known_hosts
          ssh $USER@$HOST "mkdir -p /var/www/html/backups && tar czf /var/www/html/backups/backup_$(date +'%Y%m%d%H%M%S').tar.gz -C /var/www/html --exclude=./backups ."

      - name: Deploy
        env:
          HOST: ${{ secrets.AGR_HOST }}
          USER: ${{ secrets.AGR_USER }}
          SSH_KEY: ${{ secrets.AGR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $HOST >> ~/.ssh/known_hosts
          rsync -avz --delete --exclude='node_modules' --exclude='.next/cache' --exclude='listing_images' --exclude='backups' ./my-app/ $USER@$HOST:/var/www/html

      - name: Install Production Dependencies
        env:
          HOST: ${{ secrets.AGR_HOST }}
          USER: ${{ secrets.AGR_USER }}
          SSH_KEY: ${{ secrets.AGR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $HOST >> ~/.ssh/known_hosts
          ssh $USER@$HOST "export PATH=$PATH:/root/.nvm/versions/node/v20.15.0/bin && cd /var/www/html && npm install --production"

      - name: Restart PM2
        env:
          HOST: ${{ secrets.AGR_HOST }}
          USER: ${{ secrets.AGR_USER }}
          SSH_KEY: ${{ secrets.AGR_SSH_KEY }}
        run: |
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan $HOST >> ~/.ssh/known_hosts
          ssh $USER@$HOST "export PATH=$PATH:/root/.nvm/versions/node/v20.15.0/bin:/root/.nvm/versions/node/v20.15.0/lib/node_modules/pm2/bin && pm2 restart all"

      - name: Notify Deployment
        run: echo "Deployment to server complete."
